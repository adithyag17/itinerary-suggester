{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rashmi\\\\Desktop\\\\BNM\\\\DSPROJECT\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./styles/App.css\";\n\n// function App() {\n//   const [weatherData, setWeatherData] = useState([]);\n//   const [hotelsData, setHotelsData] = useState([]);\n//   const [placesData, setPlacesData] = useState([]);\n//   const [showImage, setShowImage] = useState(false);\n\n//   const fetchData = async () => {\n//     try {\n//       const weatherResponse = await fetch(\"http://127.0.0.1:5000/weather\");\n//       const hotelsResponse = await fetch(\"http://127.0.0.1:5000/hotels\");\n//       const placesResponse = await fetch(\"http://127.0.0.1:5000/places\");\n\n//       const weather = await weatherResponse.json();\n//       const hotels = await hotelsResponse.json();\n//       const places = await placesResponse.json();\n\n//       setWeatherData(weather);\n//       setHotelsData(hotels);\n//       setPlacesData(places);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const handleShowImage = () => setShowImage(true);\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Travel Dashboard</h1>\n\n//         {/* Weather Data */}\n//         <section>\n//           <h2>Weather Data</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>City</th>\n//                 <th>Temperature</th>\n//                 <th>Condition</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {weatherData.map((item, index) => (\n//                 <tr key={index}>\n//                   <td>{item.city}</td>\n//                   <td>{item.temperature}</td>\n//                   <td>{item.condition}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </section>\n\n//         {/* Hotels Data */}\n//         <section>\n//           <h2>Top Hotels</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>City</th>\n//                 <th>Hotel Name</th>\n//                 <th>Rating</th>\n//                 <th>Address</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {hotelsData.map((item, index) => (\n//                 <tr key={index}>\n//                   <td>{item.city}</td>\n//                   <td>{item.name}</td>\n//                   <td>{item.rating}</td>\n//                   <td>{item.address}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </section>\n\n//         {/* Places to Visit */}\n//         <section>\n//           <h2>Top Places to Visit</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>City</th>\n//                 <th>Place Name</th>\n//                 <th>Rating</th>\n//                 <th>Address</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {placesData.map((item, index) => (\n//                 <tr key={index}>\n//                   <td>{item.city}</td>\n//                   <td>{item.place_name}</td>\n//                   <td>{item.rating}</td>\n//                   <td>{item.address}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </section>\n\n//         {/* Button to Show Image */}\n//         <button onClick={handleShowImage} className=\"show-button\">\n//           Show Report Image\n//         </button>\n\n//         {/* Image Display */}\n//         {showImage && (\n//           <img\n//             src={process.env.PUBLIC_URL + \"/image.png\"}\n//             alt=\"Report Visualization\"\n//             style={{ marginTop: \"20px\", width: \"50%\" }}\n//           />\n//         )}\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]); // List of cities\n  const [selectedCity, setSelectedCity] = useState(\"\"); // Selected city\n  const [cityData, setCityData] = useState(null); // Data for the selected city\n\n  // Fetch all available cities from the backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/cities\") // Backend endpoint for available cities\n    .then(response => response.json()).then(data => {\n      const cityNames = data.map(city => city.name);\n      setCities(cityNames);\n    }).catch(error => console.error(\"Error fetching cities:\", error));\n  }, []);\n\n  // Fetch details of the selected city\n  const handleCityChange = event => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    if (city) {\n      fetch(`http://localhost:5000/api/cities/${city}`) // Backend endpoint for city data\n      .then(response => response.json()).then(data => setCityData(data)).catch(error => console.error(\"Error fetching city data:\", error));\n    } else {\n      setCityData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tourist Destination Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city-select\",\n      children: \"Select a city:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"city-select\",\n      value: selectedCity,\n      onChange: handleCityChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Select a city--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), cityData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weather:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", cityData.weather.temperature, \", Condition:\", \" \", cityData.weather.condition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Hotels:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cityData.hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: hotel\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Best Places to Visit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cityData.places.map((place, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: place\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8VVSIpCbssxRLK11KI6CFTYw+/8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","cities","setCities","selectedCity","setSelectedCity","cityData","setCityData","fetch","then","response","json","data","cityNames","map","city","name","catch","error","console","handleCityChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","weather","temperature","condition","hotels","hotel","index","places","place","_c","$RefreshReg$"],"sources":["C:/Users/Rashmi/Desktop/BNM/DSPROJECT/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./styles/App.css\";\r\n\r\n// function App() {\r\n//   const [weatherData, setWeatherData] = useState([]);\r\n//   const [hotelsData, setHotelsData] = useState([]);\r\n//   const [placesData, setPlacesData] = useState([]);\r\n//   const [showImage, setShowImage] = useState(false);\r\n\r\n//   const fetchData = async () => {\r\n//     try {\r\n//       const weatherResponse = await fetch(\"http://127.0.0.1:5000/weather\");\r\n//       const hotelsResponse = await fetch(\"http://127.0.0.1:5000/hotels\");\r\n//       const placesResponse = await fetch(\"http://127.0.0.1:5000/places\");\r\n\r\n//       const weather = await weatherResponse.json();\r\n//       const hotels = await hotelsResponse.json();\r\n//       const places = await placesResponse.json();\r\n\r\n//       setWeatherData(weather);\r\n//       setHotelsData(hotels);\r\n//       setPlacesData(places);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handleShowImage = () => setShowImage(true);\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <h1>Travel Dashboard</h1>\r\n\r\n//         {/* Weather Data */}\r\n//         <section>\r\n//           <h2>Weather Data</h2>\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>City</th>\r\n//                 <th>Temperature</th>\r\n//                 <th>Condition</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {weatherData.map((item, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{item.city}</td>\r\n//                   <td>{item.temperature}</td>\r\n//                   <td>{item.condition}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </section>\r\n\r\n//         {/* Hotels Data */}\r\n//         <section>\r\n//           <h2>Top Hotels</h2>\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>City</th>\r\n//                 <th>Hotel Name</th>\r\n//                 <th>Rating</th>\r\n//                 <th>Address</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {hotelsData.map((item, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{item.city}</td>\r\n//                   <td>{item.name}</td>\r\n//                   <td>{item.rating}</td>\r\n//                   <td>{item.address}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </section>\r\n\r\n//         {/* Places to Visit */}\r\n//         <section>\r\n//           <h2>Top Places to Visit</h2>\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>City</th>\r\n//                 <th>Place Name</th>\r\n//                 <th>Rating</th>\r\n//                 <th>Address</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {placesData.map((item, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{item.city}</td>\r\n//                   <td>{item.place_name}</td>\r\n//                   <td>{item.rating}</td>\r\n//                   <td>{item.address}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </section>\r\n\r\n//         {/* Button to Show Image */}\r\n//         <button onClick={handleShowImage} className=\"show-button\">\r\n//           Show Report Image\r\n//         </button>\r\n\r\n//         {/* Image Display */}\r\n//         {showImage && (\r\n//           <img\r\n//             src={process.env.PUBLIC_URL + \"/image.png\"}\r\n//             alt=\"Report Visualization\"\r\n//             style={{ marginTop: \"20px\", width: \"50%\" }}\r\n//           />\r\n//         )}\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]); // List of cities\r\n  const [selectedCity, setSelectedCity] = useState(\"\"); // Selected city\r\n  const [cityData, setCityData] = useState(null); // Data for the selected city\r\n\r\n  // Fetch all available cities from the backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/cities\") // Backend endpoint for available cities\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const cityNames = data.map((city) => city.name);\r\n        setCities(cityNames);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching cities:\", error));\r\n  }, []);\r\n\r\n  // Fetch details of the selected city\r\n  const handleCityChange = (event) => {\r\n    const city = event.target.value;\r\n    setSelectedCity(city);\r\n\r\n    if (city) {\r\n      fetch(`http://localhost:5000/api/cities/${city}`) // Backend endpoint for city data\r\n        .then((response) => response.json())\r\n        .then((data) => setCityData(data))\r\n        .catch((error) => console.error(\"Error fetching city data:\", error));\r\n    } else {\r\n      setCityData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Tourist Destination Details</h1>\r\n\r\n      {/* Dropdown for city selection */}\r\n      <label htmlFor=\"city-select\">Select a city:</label>\r\n      <select id=\"city-select\" value={selectedCity} onChange={handleCityChange}>\r\n        <option value=\"\">--Select a city--</option>\r\n        {cities.map((city) => (\r\n          <option key={city} value={city}>\r\n            {city}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Display data for the selected city */}\r\n      {cityData && (\r\n        <div className=\"city-details\">\r\n          <h2>{selectedCity}</h2>\r\n\r\n          <h3>Weather:</h3>\r\n          <p>\r\n            Temperature: {cityData.weather.temperature}, Condition:{\" \"}\r\n            {cityData.weather.condition}\r\n          </p>\r\n\r\n          <h3>Top Hotels:</h3>\r\n          <ul>\r\n            {cityData.hotels.map((hotel, index) => (\r\n              <li key={index}>{hotel}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h3>Best Places to Visit:</h3>\r\n          <ul>\r\n            {cityData.places.map((place, index) => (\r\n              <li key={index}>{place}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAAA,CACvCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,SAAS,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;MAC/Cb,SAAS,CAACU,S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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}